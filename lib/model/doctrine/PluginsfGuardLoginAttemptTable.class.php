<?php

/**
 * PluginsfGuardLoginAttemptTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginsfGuardLoginAttemptTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PluginsfGuardLoginAttemptTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginsfGuardLoginAttempt');
    }

    /**
     * Checks to see if user is locked out, returns false or the time left a user
     * has before they have access to the web site again
     *
     * @param string   $userIP
     * @return mixed
     */
    public function isLockedOut($userIP)
    {
      $result = $this->getCheckQuery()->andWhere('ip_address = ?',$userIP)->execute();

      if ($result->count() <= 0)
        return false;

      $lastLoginAttempt = $result->getFirst()->getCreatedAt();
      $lockUntil = strtotime($lastLoginAttempt. ' + '.sfConfig::get('app_sf_guard_extra_lock_for',600).' seconds');

      if ($result->count() < sfConfig::get('app_sf_guard_extra_plugin_login_attempts',10))
        return false;
      else
        return date('Y-m-d H:i:s',strtotime($lastLoginAttempt) + sfConfig::get('app_sf_guard_extra_lock_for',600));
    }

    /**
     *
     * @return Doctrine_Query
     */
    public function getCheckQuery()
    {
      return $this->createQuery()->where('created_at BETWEEN ? AND ?',array(
        date('Y-m-d H:i:s',(time() - sfConfig::get('app_sf_guard_extra_plugin_lock_timeout',60))),
        date('Y-m-d H:i:s')
      ))->orderBy('created_at DESC');
    }
}